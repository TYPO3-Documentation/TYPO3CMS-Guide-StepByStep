#!/usr/bin/env php
<?php
const SEARCH_PATH = __DIR__ . '/../Documentation/';

$files = json_decode(file_get_contents(SEARCH_PATH . 'files.json'), true);

foreach (array_values($files) as $file) {
    if (
        $file['path'] === 'Index.md' // Ignore the project root index file
        || basename($file['path']) === 'Index.md'
        || !$file['exists']
    ) {
        continue;
    }

    $matchedFile = null;

    foreach ($file['outgoingLinks'] as $outgoingLink) {
        if (str_contains($outgoingLink['unexpandedUrl'], '/')) {
            continue;
        }

        if ($matchedFile === null) {
            $matchingFiles = array_values(array_filter(
                array_keys($files),
                function ($entry) use ($outgoingLink) {
                    return str_ends_with($entry, '/' . $outgoingLink['unexpandedUrl']);
                }
            ));

            if ($matchingFiles === [] || count($matchingFiles) > 1) {
                continue;
            }

            $matchedFile = $matchingFiles[0];
        }

        $replaceLinkString = $outgoingLink['text'];

        if ($outgoingLink['exists']) {
            $replaceLinkString = '[' . $outgoingLink['text'] . ']'
                . '(/' . $matchedFile
                . ($outgoingLink['title'] ? ' "' . $outgoingLink['title'] . '"' : '')
                . ')';
        }

        file_put_contents(
            SEARCH_PATH . $file['path'],
            str_replace(
                $outgoingLink['match'],
                $replaceLinkString,
                file_get_contents(SEARCH_PATH . $file['path'])
            )
        );

        unset($files[$outgoingLink['url']]);
    }
}

file_put_contents(SEARCH_PATH . 'files.json', json_encode($files));